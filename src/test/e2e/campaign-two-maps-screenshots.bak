import { test, expect } from "@playwright/test";

async function ensureToolbarReady(page: any) {
  // Wait until toolbar contributions are injected (plugin loader fires a custom event)
  await page.waitForFunction(() => {
    const tb = document.querySelector('[data-slot="app-toolbar"]');
    return !!tb && tb.getAttribute('data-toolbar-ready') === 'true';
  });
}

async function waitForFirstPaint(page: any) {
  // Give the worker a moment to render after size + frame messages
  await page.waitForTimeout(200);
}

test.describe("Screenshots: first vs second map", () => {
  test("capture canvas after first and second campaign+map", async ({ page }) => {
    await page.goto("/");
    await ensureToolbarReady(page);

    // First campaign + map
    await page.getByRole("button", { name: /new campaign/i }).click();
    await page.getByRole("button", { name: /new map/i }).click();
    const canvas = page.locator("canvas");
    await expect(canvas).toBeVisible();
    await waitForFirstPaint(page);
    await canvas.screenshot({ path: "test-results/first-map.png" });

    // Second campaign + map
    await page.getByRole("button", { name: /new campaign/i }).click();
    await page.getByRole("button", { name: /new map/i }).click();
    const canvas2 = page.locator("canvas");
    await expect(canvas2).toBeVisible();
    await waitForFirstPaint(page);
    await canvas2.screenshot({ path: "test-results/second-map.png" });

    // Sanity: both files written by Playwright
    // (expect does not check FS; visual verification via artifacts)
  });
});

